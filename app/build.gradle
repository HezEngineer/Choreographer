apply plugin: 'com.android.application'

def getDate() {
    def date = new Date()
    def formmedDate = date.format("yyyyMMddHHmm")
    return formmedDate
}

android {
    compileSdkVersion rootProject.ext.Global_CompileSdkVersion
    buildToolsVersion rootProject.ext.Global_BuildToolsVersion
    defaultConfig {
        applicationId "com.hezhi.niceview"
        minSdkVersion rootProject.ext.Global_MinSdkVersion
        targetSdkVersion rootProject.ext.Global_TargetSdkVersion
        versionCode 1
        versionName APP_VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        releaseConfig {
            storeFile file("../keystore")
            storePassword Key_Password
            keyAlias "hezhi"
            keyPassword Key_Password
        }
    }
    buildTypes {

        debug {
            minifyEnabled false
            buildConfigField("String","serverAdderss",debugServerAddress)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        release {
            minifyEnabled false
            buildConfigField("String","serverAdderss",releaseServerAddress)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    productFlavors {

        wandojia {

        }

        xiaomi {

        }

        huawei {

        }

        meizu {

        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def newName
            def timeNow
            def oldFile = output.outputFile
            def outDirectory = oldFile.parent
            def appName = "编舞者"
            if("true".equals(IS_JENKINS)) {
                timeNow = JENKINS_TIME
                outDirectory = 'F:/Tomcat/webapps/jenkins/apk/'+getDate();
                newName = appName + '-' +APP_VERSION_NAME + '-' + variant.productFlavors[0].name  + variant.buildType.name + '-' +timeNow +'.apk'
            } else {
                timeNow  = getDate()
                outDirectory = 'G:/ASwsp/NiceView/apk'+getDate();
                newName = appName + '-' +APP_VERSION_NAME + '-' + variant.productFlavors[0].name  + variant.buildType.name + '-' +timeNow +'.apk'
            }
            output.outputFile = new File(outDirectory,newName)

        }

    }


}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile project(':choreographer')
}
